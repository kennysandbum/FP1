#lang racket
(require net/url)
(require net/sendurl)


(define (open-page)
  (send-url "http://127.0.0.1" #t #:escape? #t ))

(define (serve port-no)
  (define serve-cust (make-custodian))
  (define listener (tcp-listen port-no 5 #t))
  (define (rept)
    (handle listener)
    (rept))
  (define thrd (thread rept))
  (define (handle listener)
    (define cust (make-custodian))
    (define-values (in out) (tcp-accept listener))
    (define thrd (thread (lambda ()
              (function in out)
              (close-input-port in)
              (close-output-port out))))
    (thread (lambda () (sleep 10)
              (custodian-shutdown-all cust))))
  (define (function in out)
    (print "user connected")
    (regexp-match #rx"(\r\n|^)\r\n" in)
    ; Send reply:
    (display "HTTP/1.0 200 Okay\r\n" out)
    (display "Server: k\r\nContent-Type: text/html\r\n\r\n" out)
    (display "<html><body>"  out )
    (display "<h1>Hi there. The test is working!</h1>" out)
    (display "<a href=\"https://github.com/kennysandbum/FP1\" style=\" color: black\">Project Repo</a>"  out)
    (display "<a href=\"https://mitpress.mit.edu/sicp/\"> <img src=\"http://www.cs.uml.edu/ecg/pub/uploads/OPLspr16/sicp-cover.jpg\" alt=\"Textbook\"> </a>" out)
    (display "</body></html>" out))
  (print "serve opened")
  (thread rept)
  (lambda () (print "serve closed")(custodian-shutdown-all serve-cust)
))
(serve 80)
(open-page)